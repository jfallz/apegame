
BEGIN_OPTIONS

END_OPTIONS

BEGIN_PROPERTIES
		[Header(Four Splats First Pass Terrain)]
		[HideInInspector]_Control("Control", 2D) = "white" {}
		[HideInInspector]_Splat3("Splat3", 2D) = "white" {}
		[HideInInspector]_Splat2("Splat2", 2D) = "white" {}
		[HideInInspector]_Splat1("Splat1", 2D) = "white" {}
		[HideInInspector]_Splat0("Splat0", 2D) = "white" {}
		[HideInInspector]_Normal0("Normal0", 2D) = "white" {}
		[HideInInspector]_Normal1("Normal1", 2D) = "white" {}
		[HideInInspector]_Normal2("Normal2", 2D) = "white" {}
		[HideInInspector]_Normal3("Normal3", 2D) = "white" {}
		[HideInInspector]_Smoothness3("Smoothness3", Range( 0 , 1)) = 1
		[HideInInspector]_Smoothness1("Smoothness1", Range( 0 , 1)) = 1
		[HideInInspector]_Smoothness0("Smoothness0", Range( 0 , 1)) = 1
		[HideInInspector]_Smoothness2("Smoothness2", Range( 0 , 1)) = 1
		_Metallic("Metallic", Range( 0 , 1)) = 0
		[HideInInspector] _texcoord( "", 2D ) = "white" {}
		[HideInInspector] __dirty( "", Int ) = 1
END_PROPERTIES

BEGIN_CBUFFER

	uniform float4 _Control_ST;
	uniform float4 _Splat0_ST;
	uniform float4 _Splat1_ST;
	uniform float4 _Splat2_ST;
	uniform float4 _Splat3_ST;
	uniform float _Smoothness0;
	uniform float _Smoothness1;
	uniform float _Smoothness2;
	uniform float _Smoothness3;
	uniform float _Metallic;

END_CBUFFER


BEGIN_CODE

	uniform sampler2D _Control;
	uniform sampler2D _Normal0;
	uniform sampler2D _Splat0;
	uniform sampler2D _Normal1;
	uniform sampler2D _Splat1;
	uniform sampler2D _Normal2;
	uniform sampler2D _Splat2;
	uniform sampler2D _Normal3;
	uniform sampler2D _Splat3;

	void SurfaceFunction(inout Surface o, ShaderData d)
	{
			float2 uv_Control = d.texcoord0.xy * _Control_ST.xy + _Control_ST.zw;
			float4 tex2DNode5_g6 = tex2D( _Control, uv_Control );
			float dotResult20_g6 = dot( tex2DNode5_g6 , float4(1,1,1,1) );
			float SplatWeight22_g6 = dotResult20_g6;
			float4 SplatControl26_g6 = ( tex2DNode5_g6 / ( SplatWeight22_g6 + 0.001 ) );
			float4 temp_output_59_0_g6 = SplatControl26_g6;
			float2 uv_Splat0 = d.texcoord0.xy * _Splat0_ST.xy + _Splat0_ST.zw;
			float2 uv_Splat1 = d.texcoord0.xy * _Splat1_ST.xy + _Splat1_ST.zw;
			float2 uv_Splat2 = d.texcoord0.xy * _Splat2_ST.xy + _Splat2_ST.zw;
			float2 uv_Splat3 = d.texcoord0.xy * _Splat3_ST.xy + _Splat3_ST.zw;
			float4 weightedBlendVar8_g6 = temp_output_59_0_g6;
			float4 weightedBlend8_g6 = ( weightedBlendVar8_g6.x*tex2D( _Normal0, uv_Splat0 ) + weightedBlendVar8_g6.y*tex2D( _Normal1, uv_Splat1 ) + weightedBlendVar8_g6.z*tex2D( _Normal2, uv_Splat2 ) + weightedBlendVar8_g6.w*tex2D( _Normal3, uv_Splat3 ) );
			o.Normal = UnpackNormal( weightedBlend8_g6 );
			float4 appendResult33_g6 = (float4(1.0 , 1.0 , 1.0 , _Smoothness0));
			float4 appendResult36_g6 = (float4(1.0 , 1.0 , 1.0 , _Smoothness1));
			float4 appendResult39_g6 = (float4(1.0 , 1.0 , 1.0 , _Smoothness2));
			float4 appendResult42_g6 = (float4(1.0 , 1.0 , 1.0 , _Smoothness3));
			float4 weightedBlendVar9_g6 = temp_output_59_0_g6;
			float4 weightedBlend9_g6 = ( weightedBlendVar9_g6.x*( appendResult33_g6 * tex2D( _Splat0, uv_Splat0 ) ) + weightedBlendVar9_g6.y*( appendResult36_g6 * tex2D( _Splat1, uv_Splat1 ) ) + weightedBlendVar9_g6.z*( appendResult39_g6 * tex2D( _Splat2, uv_Splat2 ) ) + weightedBlendVar9_g6.w*( appendResult42_g6 * tex2D( _Splat3, uv_Splat3 ) ) );
			float4 MixDiffuse28_g6 = weightedBlend9_g6;
			o.Albedo = MixDiffuse28_g6.xyz;
			o.Metallic = _Metallic;
			o.Smoothness = (MixDiffuse28_g6).w;
			o.Alpha = 1;
	}

END_CODE

