#pragma kernel Main

#include "../Includes/CommonDataTypes.hlsl"
#include "../Includes/Random.hlsl"
#include "../Includes/Math.hlsl"

RWStructuredBuffer<PositionSample> _Positions;

float4 _GridBounds;
float4 _BiomeBounds;
int _Density;
float4 _Seed;
int _BaseIndex;

[numthreads(8, 1, 1)]
void Main(uint3 id: SV_DISPATCHTHREADID)
{
	float gridWidth = _GridBounds.z;
	float biomeWidth = _BiomeBounds.z;
	float widthRatio = gridWidth / biomeWidth;
	float spacing = widthRatio / _Density;

	uint index = _BaseIndex + id.x;
	int x = index % _Density;
	int z = (int) (index / _Density);

	float2 uv = float2((x + 0.5) * spacing, (z + 0.5) * spacing);
	float3 pos = float3(uv.x, 0, uv.y);

	PositionSample sample = (PositionSample)0;
	sample.isValid =1;// (pos.x >= 0) * (pos.x <= 1) * (pos.z >= 0) * (pos.z <= 1);
	sample.position = pos;
	_Positions[index] = sample;
}